{"version":3,"sources":["gravatar.js","firebase.js","components/MessageField.js","components/MessageSubmitButton.js","components/MessageInputField.js","components/MessageItem.js","components/MessageList.js","components/Main.js","components/SignIn.js","components/App.js","index.js"],"names":["gravatarPath","string","lowerCaseString","trim","toLowerCase","digest","crypto","createHash","update","process","firebaseConfig","apiKey","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","firebase","initializeApp","messagesRef","database","ref","pushMessage","name","text","push","MessageField","inputEl","setText","useState","isComposed","setIsComposed","TextField","autoFocus","fullWidth","inputRef","onChange","e","target","value","onKeyDown","key","preventDefault","onCompositionStart","onCompositionEnd","MessageSubmitButton","IconButton","disabled","onClick","current","focus","useStyles","makeStyles","root","gridRow","margin","MessageInputField","useRef","classes","avatarPath","className","Grid","container","item","xs","Avatar","src","inline","display","MessageItem","isLastItem","useEffect","scrollIntoView","behavior","ListItem","divider","ListItemAvatar","ListItemText","primary","secondary","Typography","component","variant","color","overflow","width","MessageList","messages","setMessages","orderByKey","limitToLast","on","snapshot","val","newMessages","Object","entries","map","entry","nameAndText","length","List","index","height","gridTemplateRows","Main","Copyright","align","Link","href","rel","theme","paper","marginTop","spacing","flexDirection","alignItems","avatar","backgroundColor","palette","main","form","submit","SignIn","setName","setDisabled","setString","Container","maxWidth","CssBaseline","noValidate","required","id","label","Button","type","Box","mt","config","signInEnabled","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.f65d590f.chunk.js","sourcesContent":["import crypto from 'crypto';\n\nexport const gravatarPath = (string) => {\n  const lowerCaseString = string.trim().toLowerCase();\n  const md5 = crypto.createHash('md5');\n  const digest = md5.update(lowerCaseString, 'binary').digest('hex');\n  return `https://www.gravatar.com/avatar/${digest}/?d=robohash`;\n};\n","import firebase from 'firebase';\n\nconst {\n  REACT_APP_FIREBASE_API_KEY,\n  REACT_APP_FIREBASE_AUTH_DOMAIN,\n  REACT_APP_FIREBASE_DATABASE_URL,\n  REACT_APP_FIREBASE_PROJECT_ID,\n  REACT_APP_FIREBASE_STORAGE_BUCKET,\n  REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  REACT_APP_FIREBASE_APP_ID,\n} = process.env;\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_FIREBASE_API_KEY,\n  authDomain: REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: REACT_APP_FIREBASE_APP_ID,\n};\n\n\n\nfirebase.initializeApp(firebaseConfig);\nconst database = firebase.database();\nexport const messagesRef = database.ref('messages');\n\nexport const pushMessage = ({ name, text }) => {\n  messagesRef.push({ name, text });\n};\n","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\n\nimport { pushMessage } from '../firebase';\n\nconst MessageField = ({ inputEl, name, setText, text }) => {\n  const [isComposed, setIsComposed] = useState(false);\n\n  return (\n    <TextField\n      autoFocus\n      fullWidth={true}\n      inputRef={inputEl}\n      onChange={(e) => setText(e.target.value)}\n      onKeyDown={(e) => {\n        if (isComposed) return;\n\n        const text = e.target.value;\n        if (text === '') return;\n\n        if (e.key === 'Enter') {\n          pushMessage({ name, text });\n          setText('');\n          e.preventDefault();\n        }\n      }}\n      onCompositionStart={() => setIsComposed(true)}\n      onCompositionEnd={() => setIsComposed(false)}\n      value={text}\n    />\n  );\n};\n\nexport default MessageField;\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport { pushMessage } from '../firebase';\n\nconst MessageSubmitButton = ({ inputEl, name, setText, text }) => {\n  return (\n    <IconButton\n      disabled={text === ''}\n      onClick={() => {\n        pushMessage({ name, text });\n        setText('');\n        inputEl.current.focus();\n      }}\n    >\n      <SendIcon />\n    </IconButton>\n  );\n};\n\nexport default MessageSubmitButton;\n","import React, { useRef, useState } from 'react';\nimport { Avatar, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { gravatarPath } from '../gravatar';\nimport MessageField from './MessageField';\nimport MessageSubmitButton from './MessageSubmitButton';\n\nconst useStyles = makeStyles({\n  root: {\n    gridRow: 2,\n    margin: '26px',\n  },\n});\n\nconst MessageInputField = ({ name }) => {\n  const inputEl = useRef(null);\n  const [text, setText] = useState('');\n  const classes = useStyles();\n  const avatarPath = gravatarPath(name);\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={1}>\n          <Avatar src={avatarPath} />\n        </Grid>\n        <Grid item xs={10}>\n          <MessageField\n            inputEl={inputEl}\n            name={name}\n            setText={setText}\n            text={text}\n          />\n        </Grid>\n        <Grid item xs={1}>\n          <MessageSubmitButton\n            inputEl={inputEl}\n            name={name}\n            setText={setText}\n            text={text}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default MessageInputField;\n","import React, { useEffect, useRef } from 'react';\nimport {\n  Avatar,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { gravatarPath } from '../gravatar';\n\nconst useStyles = makeStyles(() => ({\n  inline: {\n    display: 'inline',\n  },\n}));\n\nconst MessageItem = ({ isLastItem, name, text }) => {\n  const ref = useRef(null);\n  const classes = useStyles();\n  const avatarPath = gravatarPath(name);\n\n  useEffect(() => {\n    if (isLastItem) {\n      ref.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [isLastItem]);\n\n  return (\n    <ListItem divider={true} ref={ref}>\n      <ListItemAvatar>\n        <Avatar src={avatarPath} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={name}\n        secondary={\n          <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={classes.inline}\n            color=\"textPrimary\"\n          >\n            {text}\n          </Typography>\n        }\n      />\n    </ListItem>\n  );\n};\n\nexport default MessageItem;\n","import React, { useEffect, useState } from 'react';\nimport { List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MessageItem from './MessageItem';\nimport { messagesRef } from '../firebase';\n\nconst useStyles = makeStyles({\n  root: {\n    gridRow: 1,\n    overflow: 'auto',\n    width: '100%',\n  },\n});\n\nconst MessageList = () => {\n  const [messages, setMessages] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    messagesRef\n      .orderByKey()\n      .limitToLast(15)\n      .on('value', (snapshot) => {\n        const messages = snapshot.val();\n        if (messages === null) return;\n\n        const entries = Object.entries(messages);\n        const newMessages = entries.map((entry) => {\n          const [key, nameAndText] = entry;\n          return { key, ...nameAndText };\n        });\n        setMessages(newMessages);\n      });\n  }, []);\n\n  const length = messages.length;\n\n  return (\n    <List className={classes.root}>\n      {messages.map(({ key, name, text }, index) => {\n        const isLastItem = length === index + 1;\n\n        return (\n          <MessageItem\n            key={key}\n            name={name}\n            text={text}\n            isLastItem={isLastItem}\n          />\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MessageList;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MessageInputField from './MessageInputField';\nimport MessageList from './MessageList';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    height: '100vh',\n    gridTemplateRows: '1fr auto',\n  },\n});\n\nconst Main = ({ name }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MessageList />\n      <MessageInputField name={name} />\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://alpaca-connect.com/\" target=\"_blank\" rel=\"noopener\">\n        アルパカコネクト\n      </Link>\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn({ setName }) {\n  const classes = useStyles();\n  const [disabled, setDisabled] = useState(true);\n  const [string, setString] = useState('');\n  const [isComposed, setIsComposed] = useState(false);\n\n  useEffect(() => {\n    const disabled = string === '';\n    setDisabled(disabled)}, \n    [string]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          チャットへようこそ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"ユーザー名\"\n            name=\"name\"\n            autoFocus\n            onChange={(e) => setString(e.target.value)}\n            onKeyDown={(e) => {\n              if (isComposed) return;\n              if (e.key === 'Enter') {\n                setName(e.target.value);\n                e.preventDefault();\n              }\n            }}\n            onCompositionStart={() => setIsComposed(true)}\n            onCompositionEnd={() => setIsComposed(false)}\n          />\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={disabled}\n            onClick={() => {\n              setName(string);\n            }}\n          >\n            はじめる\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React, { useState } from 'react';\n\nimport Main from './Main';\nimport SignIn from './SignIn';\nimport config from '../config.json';\n\nexport default () => {\n  const [name, setName] = useState('');\n\n  if (config.signInEnabled && name === '') {\n    return <SignIn setName={setName} />;\n  } else {\n    return <Main name={name} />;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}